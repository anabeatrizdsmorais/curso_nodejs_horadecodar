## INSTALAÇÃO ##
1- npm init 
2- npm install express

## O QUE É O NODE ##

É UMA BIBLIOTECA DE JAVASCRIPT QUE POSSIBILITA CRIAR SOFTWARES EM JS DO LADO DO SERVIDOR;

## O QUE É O NPM ##

É O GERENCIADOR DE PACOTES DO NODE; ASSIM COMO O COMPOSER É O GERENCIADOR DE PACOTES DO PHP; ASSIM COMO O PYTHON É O PIP; VAMOS UTILIZAR BIBLIOTECAS DE TERCEIROS BAIXANDO PELO NPM; OS MODULOS EXTERNOS FICAM DENTRO DA PASTA NODE_MODULES; **lembre: o node modules DEVE SER DESCARTADO, POIS A CADA INSTALAÇÃO DO PROJETO VAMOS BAIXA-LO NOVAMENTE.** ; AO INSTALAR O NODE O NPM VEM JUNTO ; O BINARIO PRECISA ESTAR NO PATH PARA O NPM DAR CERTO.

## COMO ADICIONAR O PATH ##

CONFIGURAÇÃO DO COMPUTADOR > CONFIGURAÇÕES AVANÇADAS > VARIAVEIS DE AMBIENTES > VARIAVEIS DO SISTEMA > NOVO 

ADICIONAR O CAMINHO DA INSTALAÇÃO DO NODE NO SEU SITEMA

## UTILIZANDO UM MODULO ##

INSTRUÇÃO 'IMPORT'

const fs = require ('fs') ; //importando file system
//utilizando const para deixar o código mais seguro pois não vamos mudar a variável.

fs.readFile('arquivo.txt', 'utf-8', (err, data) => {
if(err)
console.log(err); return false;

console.log(data)
});


https://github.com/matheusbattisti/curso_node.git

## O QUE SAO MODULOS ##

SÃO SCRIPTS REAPROVEITAVEIS; 
SAO DIVIDIDOS EM 3 CATEGORIAS => 
INTERNOS: MÓDULOS QUE NÓS DESENVOLVEMOS 
EXTERNOS: MÓDULOS QUE INSTALAMOS VIA NPM 
CORE MODULES: MÓDULOS QUE VEM COM O NODEJS

## MODULOS INTERNOS ##

- SAO CRIADOS NAS PASTAS DO NOSSO PROJETO
- PODEMOS UTILIZAR A INSTRUÇÃO MODULE.EXPORTS
- PARA IMPORTAR VAMOS UTILIZAR A INSTRUÇÃO REQUIRE

## EXPORTS E IMPORT ##

- EXPORTS: É A FORMA DE EXPORTAR UM MODULO PARA QUE OUTROS MODULOS POSSAM UTILIZAR
- IMPORT: É A FORMA DE IMPORTAR UM MODULO PARA QUE SEJA UTILIZADO NO NOSSO CÓDIGO
- EXTENSÃO DOS ARQUVIOS SAO .mjs

## CORE MODULES ##

- SAO MÓDULOS QUE VEM COM O NODEJS E QUE VEM PRONTOS PARA SEREM UTILIZADOS

## SINCRONO E ASSINCRONO ##

- SINCRONO (SYNC): É A FORMA DE EXECUÇÃO DE UM CÓDIGO QUE EXECUTA UM POR UM 
(O CODIGO ESPERA SER TOTALMENTE EXECUTADO PARA PROSSEGUIR)

- ASSINCRONO (ASYNC): É A FORMA DE EXECUÇÃO DE UM CÓDIGO QUE EXECUTA PARALELAMENTE 
(O CODIGO CONTINUA PROGREDINDO E EM UM PONTYO FUTURO OBTER A RESPOSTA DA EXECUCAO ASSINCRONA)

## ERROS NO NODE ##

- THROW: UMA FORMA DE ENCERRAR UM PROGRAMA GERANDO NOVO ERRO.
- TRY/CATCH: UMA FORMA DE EVIDENCIAR ALGO QUE DEU ERRADO EM UM BLOCO DE CODIGO E EXIBIR MENSAGEM DE ERRO.

